# name: Stage Deployment

# on:
#   push:
#     branches: [ stage ]

# jobs:

#   deploy:
#     name: Stage Branch Deploy
#     runs-on: ubuntu-latest
#     strategy:
#       matrix:
#         python-version: [3.8]
#         node-version: ['16.x']
#         appname: ['bndle-integration-deployment']
#         deploy-group: ['stage']
#         s3-bucket: ['bundlecodebucket']
#         s3-filename: ['stage-bndle-integration-${{ github.sha }}']

#     # needs: buildAndTest
#     steps:
#       - uses: actions/checkout@v2

#       # Initialize Node.js
#       - name: Install Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v1
#         with:
#           node-version: ${{ matrix.node-version }}

#       # Configure AWS credentials
#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: eu-west-2

#       # Install project dependencies and build
#       - name: Install dependencies
#         run: npm install --save module_name
#       - name: Set env
#         run: aws s3 cp s3://bndle-environment-variables/envs/stage/env.stage.integration .env

#       - name: Run build
#         run: RUNNER_TRACKING_ID="" npm run start

#       # Deploy push to AWS S3
#       - name: AWS Deploy push
#         run: |
#           aws deploy push \
#           --application-name ${{ matrix.appname }} \
#           --description "This is a revision for the ${{ matrix.appname }}-${{ github.sha }}" \
#           --s3-location s3://${{ matrix.s3-bucket }}/${{ matrix.s3-filename }}.zip \
#           --source .

#         # --ignore-hidden-files \
#       # Create deployment to CodeDeploy
#       - name: AWS Create Deployment
#         run: |
#           aws deploy create-deployment \
#            --application-name ${{ matrix.appname }} \
#            --deployment-config-name CodeDeployDefault.OneAtATime \
#            --deployment-group-name ${{ matrix.deploy-group }} \
#            --file-exists-behavior OVERWRITE \
#            --s3-location bucket=${{ matrix.s3-bucket }},key=${{ matrix.s3-filename }}.zip,bundleType=zip \

name: Deploy on Stage

on:
  push:
    branches: [ stage ]

jobs:
  Deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2 
      - name: Build & Deploy
        env:
            PRIVATE_KEY: ${{ secrets.STAGE_SSH_PRIVATE_KEY }}
            HOSTNAME: ${{secrets.STAGE_SSH_HOST}}
            USER_NAME: ${{secrets.USER_NAME}}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key

          # Create the ~/.ssh directory if it doesn't exist
          mkdir -p "$HOME/.ssh"

          # Add the SSH host key to known_hosts
          ssh-keyscan -t rsa "${HOSTNAME}" >> "$HOME/.ssh/known_hosts"

          ssh -i private_key ${USER_NAME}@${HOSTNAME} '
          cd /home/ubuntu/bndle/bndle-integration &&
              sudo git checkout stage &&
              sudo git pull &&
              sudo npm i --legacy-peer-deps &&
              pm2 restart 11
          '

  slackNotification:
    name: Slack Notification
    runs-on: ubuntu-latest
    needs: Deploy
    steps:
    - uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}